name: Build, Run and Publish binary

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    strategy:
      matrix:
        platform: ["linux/amd64", "linux/arm64"]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Save platform as a new variable
        id: save_platform
        run: echo "::set-output name=platform::$(echo ${{ matrix.platform }} | tr '/' '-')"

      - name: Create and use builder
        run: |
          docker buildx create --name captions-builder --use
          docker buildx inspect --bootstrap

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}/captions-${{ steps.save_platform.outputs.platform }}
          cache-from: type=gha, scope=${{ steps.save_platform.outputs.platform }}
          cache-to: type=gha, scope=${{ steps.save_platform.outputs.platform }}, mode=max
          platforms: ${{ matrix.platform }}

      - name: Run the Docker image
        run: mkdir -p ./${{ matrix.platform }} && docker run --platform=${{ matrix.platform }} -v ./${{ matrix.platform }}:/app/out ghcr.io/${{ github.repository }}/captions-${{ steps.save_platform.outputs.platform }}

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.save_platform.outputs.platform }}
          path: ./${{ matrix.platform }}/captions

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download amd64 artifact
        uses: actions/download-artifact@v2
        with:
          name: linux-amd64
          path: ./linux/amd64/

      - name: Download arm64 artifact
        uses: actions/download-artifact@v2
        with:
          name: linux-arm64
          path: ./linux/arm64/
      - name: Get commit SHA
        id: get_sha
        run: |
          SHA=$(git rev-parse --short HEAD)
          echo "SHA: $SHA"
          echo "::set-output name=sha_short::$SHA"

      - name: Calculate arm64 binary checksum
        id: arm64_checksum
        run: echo "::set-output name=sha256::$(sha256sum ./linux/arm64/captions | awk '{print $1}')"

      - name: Calculate amd64 binary checksum
        id: amd64_checksum
        run: echo "::set-output name=sha256::$(sha256sum ./linux/amd64/captions | awk '{print $1}')"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_sha.outputs.sha_short }}
          release_name: Release ${{ steps.get_sha.outputs.sha_short }}
          body: |
            Commit SHA: ${{ steps.get_sha.outputs.sha_short }}
            Binary SHA256 checksum (linux/amd64): ${{ steps.amd64_checksum.outputs.sha256 }}
            Binary SHA256 checksum (linux/arm64): ${{ steps.arm64_checksum.outputs.sha256 }}
          draft: false
          prerelease: false
      - name: Upload Release Asset for linux/amd64
        id: upload-release-asset-amd64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux/amd64/captions
          asset_name: captions-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload Release Asset for linux/arm64
        id: upload-release-asset-arm64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux/arm64/captions
          asset_name: captions-linux-arm64
          asset_content_type: application/octet-stream
